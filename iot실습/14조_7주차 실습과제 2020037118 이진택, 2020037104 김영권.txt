#include "DSP2833x_Device.h" // DSP2833x Headerfile Include File
#include "DSP2833x_Examples.h" // DSP2833x Examples Include File


#define DIP1 GpioDataRegs.GPBDAT.bit.GPIO48
#define DIP2 GpioDataRegs.GPBDAT.bit.GPIO49

#define LED1_H GpioDataRegs.GPASET.bit.GPIO25 = 1
#define LED1_L GpioDataRegs.GPACLEAR.bit.GPIO25 = 1
#define LED2_H GpioDataRegs.GPASET.bit.GPIO24 = 1
#define LED2_L GpioDataRegs.GPACLEAR.bit.GPIO24 = 1

#define LCDD0_H GpioDataRegs.GPBSET.bit.GPIO57 = 1
#define LCDD1_H GpioDataRegs.GPBSET.bit.GPIO56 = 1
#define LCDD2_H GpioDataRegs.GPBSET.bit.GPIO61 = 1
#define LCDD3_H GpioDataRegs.GPBSET.bit.GPIO60 = 1
#define LCDE_H GpioDataRegs.GPBSET.bit.GPIO55 = 1
#define LCDRS_H GpioDataRegs.GPBSET.bit.GPIO54 = 1
#define LCDD0_L GpioDataRegs.GPBCLEAR.bit.GPIO57 = 1
#define LCDD1_L GpioDataRegs.GPBCLEAR.bit.GPIO56 = 1
#define LCDD2_L GpioDataRegs.GPBCLEAR.bit.GPIO61 = 1
#define LCDD3_L GpioDataRegs.GPBCLEAR.bit.GPIO60 = 1
#define LCDE_L GpioDataRegs.GPBCLEAR.bit.GPIO55 = 1
#define LCDRS_L GpioDataRegs.GPBCLEAR.bit.GPIO54 = 1


void Gpio_select(void);
void lcdprint_data(char *str); // 문자열 출력
void lcd_write(char data,unsigned char Rs); // 한 문자씩 출력
void lcd_Gpio_data_out(unsigned char da); // GPIO 데이터 설정
void lcd_init(void);


void main(){
	unsigned char counter = 0;
	InitSysCtrl(); //basic core initialization
	DINT; //Disable all interrupts

	Gpio_select();
	lcd_init();
 for(;;){
	 Gpio_Fnd_out(counter);

	if(DIP1 && DIP2){
		lcd_write(0X80,0);
		lcdprint_data(" 010-1234-5678");
		lcd_write(0XC0,0);
		lcdprint_data(" 010-1234-5678");
		LED1_H;
		LED2_H;
		counter=3;
	}else if(DIP1 && !DIP2){
		lcd_write(0XC0,0);
		lcdprint_data("                ");
		lcd_write(0X80,0);
		lcdprint_data(" 010-1234-5678");
		LED1_H;
		LED2_L;
		counter=1;
	}else if(!DIP1 && DIP2){
		lcd_write(0X80,0);
		lcdprint_data("                ");
		lcd_write(0XC0,0);
		lcdprint_data(" 010-1234-5678");
		LED1_L;
		LED2_H;
		counter=2;
	}else{
		lcd_write(0X01,0);
		LED1_L;
		LED2_L;
		counter=0;
	}
	DELAY_US(1000000);
 }
}
void Gpio_Fnd_out(unsigned char da){
	if(da & 0x01) GpioDataRegs.GPBSET.bit.GPIO50 = 1;
	else GpioDataRegs.GPBCLEAR.bit.GPIO50 = 1;
	if(da & 0x02) GpioDataRegs.GPBSET.bit.GPIO51 = 1;
	else GpioDataRegs.GPBCLEAR.bit.GPIO51 = 1;
	if(da & 0x04) GpioDataRegs.GPBSET.bit.GPIO52 = 1;
	else GpioDataRegs.GPBCLEAR.bit.GPIO52 = 1;
	if(da & 0x08) GpioDataRegs.GPBSET.bit.GPIO53 = 1;
	else GpioDataRegs.GPBCLEAR.bit.GPIO53 = 1;
}
void Gpio_select(void){
	EALLOW;

	// 레지스터 제어
	GpioCtrlRegs.GPBMUX2.all = 0;
	GpioCtrlRegs.GPBDIR.bit.GPIO54 = 1;
	GpioCtrlRegs.GPBDIR.bit.GPIO55 = 1;
	GpioCtrlRegs.GPBDIR.bit.GPIO57 = 1;
	GpioCtrlRegs.GPBDIR.bit.GPIO56 = 1;
	GpioCtrlRegs.GPBDIR.bit.GPIO61 = 1;
	GpioCtrlRegs.GPBDIR.bit.GPIO60 = 1;
	GpioCtrlRegs.GPADIR.bit.GPIO25 = 1;
	GpioCtrlRegs.GPADIR.bit.GPIO24 = 1;
	GpioCtrlRegs.GPBDIR.bit.GPIO50 = 1;
	GpioCtrlRegs.GPBDIR.bit.GPIO51 = 1;
	GpioCtrlRegs.GPBDIR.bit.GPIO52 = 1;
	GpioCtrlRegs.GPBDIR.bit.GPIO53 = 1;
	EDIS;
	EDIS;
}

void lcd_Gpio_data_out(unsigned char da)
{
	if(da & 0X1) LCDD0_H;
	else LCDD0_L;
	if(da & 0X2) LCDD1_H;
	else LCDD1_L;
	if(da & 0X4) LCDD2_H;
	else LCDD2_L;
	if(da & 0X8) LCDD3_H;
	else LCDD3_L;
}

void lcd_write(char data, unsigned char Rs) // 한 문자씩 출력
{
	if(Rs) LCDRS_H;
	else LCDRS_L;
	lcd_Gpio_data_out((data>>4) & 0X0f);
	DELAY_US(1);
	LCDE_H;
	DELAY_US(1);
	LCDE_L;
	DELAY_US(1);

	lcd_Gpio_data_out((data) & 0X0f);
	DELAY_US(1);
	LCDE_H;
	DELAY_US(1);
	LCDE_L;
	DELAY_US(41);
}
void lcd_init(void)
{
	lcd_write(0x28,0);
	lcd_write(0x28,0);
	lcd_write(0x0C,0);
	lcd_write(0x01,0);
	DELAY_US(1960);
	lcd_write(0x06,0);
}


void lcdprint_data(char *str)// 문자열 출력
{
	unsigned char i =0;
	while(str[i]!='\0')
	{
		lcd_write(str[i++], 1);
	}
}
